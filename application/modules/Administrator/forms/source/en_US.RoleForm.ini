[roles]



;Add an Name element

roles.elements.role_name.type = "text"

roles.elements.role_name.options.size =40

roles.elements.role_name.options.required = true

roles.elements.role_name.options.label = "Name "

roles.elements.role_name.options.title = "Enter User Role Name"
admin
roles.elements.role_name.options.info = "Enter User Role Name"

roles.elements.role_name.options.class = "ui-widget-content ui-corner-all"

roles.elements.role_name.options.value = ""

roles.elements.role_name.options.filters.trim.filter = "StringTrim"

roles.elements.role_name.options.filters.StripTags.filter = "StripTags"



;Add an Role Title element

roles.elements.role_title.type = "text"

roles.elements.role_title.options.size =40

roles.elements.role_title.options.required = true

roles.elements.role_title.options.label = "Select a Title of a role"

roles.elements.role_title.options.title = "Select a Title of a role"

roles.elements.role_title.options.info = "Generally the name and title serves almost same purpose except url representation. The title will be published to the URL when a user browses for signup / login. Most of cases Search Engines and visitors will see the title in URL, therefore a short and meaning full title is expected. Be informed that title MUST BE unique / non-duplicated."

roles.elements.role_title.options.class = "ui-widget-content ui-corner-all"

roles.elements.role_title.options.value = ""

roles.elements.role_title.options.filters.trim.filter = "StringTrim"

roles.elements.role_title.options.filters.StripTags.filter = "StripTags"



;Add an Short Description element

roles.elements.role_desc.type = "text"

roles.elements.role_desc.options.size = 40

roles.elements.role_desc.options.required = true

roles.elements.role_desc.options.label = "Type a Description of role "

roles.elements.role_desc.options.title = "Type a Description of role"

roles.elements.role_desc.options.info = "The is important to understand and differentiate one role from another. This is a short description to help you understanding the role and explains it's importance. Write a short meaning brief description so that it can help your understanding in future."

roles.elements.role_desc.options.class = "ui-widget-content ui-corner-all"

roles.elements.role_desc.options.value = ""

roles.elements.role_desc.options.filters.trim.filter = "StringTrim"

roles.elements.role_desc.options.filters.StripTags.filter = "StripTags"



;Add an Role Lock element

roles.elements.role_lock.type = "radio"

roles.elements.role_lock.options.class = "ui-widget-content ui-corner-all"

roles.elements.role_lock.options.required = true

roles.elements.role_lock.options.label = "Do you want to Lock this role ? "

roles.elements.role_lock.options.title = "NB : Locking a role means lower privileged user (even admin) cannot edit these role permissions which is set or preset  by root user or super admin. On the other word, When a role is locked, permission can't be modified until it unlocked."

roles.elements.role_lock.options.info = "NB : Locking a role means lower privileged user (even admin) cannot edit these role permissions which is set or preset  by root user or super admin. On the other word, When a role is locked, permission can't be modified until it unlocked."

roles.elements.role_lock.options.value = "1"

roles.elements.role_lock.options.multiOptions.0 = "Locked"

roles.elements.role_lock.options.multiOptions.1 = "Unlocked"

roles.elements.role_lock.options.separator = " "



;Add an Register Form element

roles.elements.form_id.type = "select"

roles.elements.form_id.options.size = 1

roles.elements.form_id.options.class = "ui-widget-content ui-corner-all"

roles.elements.form_id.options.label = "Select a Registration Form"

roles.elements.form_id.options.title = "Select a Registration Form"

roles.elements.form_id.options.info = "The drop down field contains the list of web forms. Please choose which form will be used to get a user registered through font-end. The system has many static, predefine or dynamic forms to get input from a user at font-end interface. The selected form will be displayed to a users/ visitors when he/she want to get registered for this role."

roles.elements.form_id.options.value = "0"

roles.elements.form_id.options.multiOptions.0 = "Select......."



;Add an Auto Approve element

roles.elements.auto_approve.type = "radio"

roles.elements.auto_approve.options.class = "ui-widget-content ui-corner-all"

roles.elements.auto_approve.options.required = true

roles.elements.auto_approve.options.label = "Allow user to login to his/her account immediately after registration "

roles.elements.auto_approve.options.title = "Enables means, registering user will NOT remain pending for  admin approval. They can access to the member's area as soon as registration process is successful."

roles.elements.auto_approve.options.info = "Enables means, registering user will NOT remain pending for  admin approval. They can access to the member's area as soon as registration process is successful."

roles.elements.auto_approve.options.value = "1"

roles.elements.auto_approve.options.multiOptions.1 = "Allowed"

roles.elements.auto_approve.options.multiOptions.0 = "Not Allowed"

roles.elements.auto_approve.options.separator = " "



;Add an Auto Publish Article element

roles.elements.auto_publish_article.type = "radio"

roles.elements.auto_publish_article.options.class = "ui-widget-content ui-corner-all"

roles.elements.auto_publish_article.options.required = true

roles.elements.auto_publish_article.options.label = "Auto Publish Articles "

roles.elements.auto_publish_article.options.title = "When users submit a new post, property or listing, publish to my site immediately.<br /> NB : Enabling means, when a registered user submits any posting, articles, business leads, or listing etc it will publish for public viewing right away without admin approval. IF you allow it, you will have no censorship on user's submitted data. We would NOT recommend publishing user's data automatically due to security reason, because there is a high chance of publishing copyrighted contents or abusive text or image which you may not want to show on your website."

roles.elements.auto_publish_article.options.info = "NB : Enabling means, when a registered user submits any posting, articles, business leads, or listing etc it will publish for public viewing right away without admin approval. IF you allow it, you will have no censorship on user's submitted data. We would NOT recommend publishing user's data automatically due to security reason, because there is a high chance of publishing copyrighted contents or abusive text or image which you may not want to show on your website.   "

roles.elements.auto_publish_article.options.value = "1"

roles.elements.auto_publish_article.options.multiOptions.1 = "Allowed"

roles.elements.auto_publish_article.options.multiOptions.0 = "Not Allowed"

roles.elements.auto_publish_article.options.separator = " "



;Add an Access File Manager element

roles.elements.access_file_image_manager.type = "radio"

roles.elements.access_file_image_manager.options.class = "ui-widget-content ui-corner-all"

roles.elements.access_file_image_manager.options.required = true

roles.elements.access_file_image_manager.options.label = "Allow access to navigate through global file manager and image galleries "

roles.elements.access_file_image_manager.options.title = "NB : Enabling means, you are allowing user under  this  role to navigate all images uploaded at your site. All images are stored at image file manager (/images/*), therefore as soon as user gets access to image file manager, he/she will have permission to add, edit and delete all images and files. "

roles.elements.access_file_image_manager.options.info = "NB : Enabling means, you are allowing user under  this  role to navigate all images uploaded at your site. All images are stored at image file manager (/images/*), therefore as soon as user gets access to image file manager, he/she will have permission to add, edit and delete all images and file. "

roles.elements.access_file_image_manager.options.value = "0"

roles.elements.access_file_image_manager.options.multiOptions.1 = "Allowed"

roles.elements.access_file_image_manager.options.multiOptions.0 = "Not Allowed"

roles.elements.access_file_image_manager.options.separator = " "



;Add an Access to users Profile element

roles.elements.access_other_user_profile.type = "radio"

roles.elements.access_other_user_profile.options.class = "ui-widget-content ui-corner-all"

roles.elements.access_other_user_profile.options.required = true

roles.elements.access_other_user_profile.options.label = "Allow  user to access to other user's profile also "

roles.elements.access_other_user_profile.options.title = "NB : Enabling means, you are allowing user of this role to view and manage other user's profile as well.  This feature might be useful for sub-admin or manager but please make sure that, when you enable it, user under this role is going to get access to all user's profile. "

roles.elements.access_other_user_profile.options.info = "NB : Enabling means, you are allowing user of this role to view and manage other user's profile as well.  This feature might be useful for sub-admin or manager but please make sure that, when you enable it, user under this role is going to get access to all user's profile. "

roles.elements.access_other_user_profile.options.value = "0"

roles.elements.access_other_user_profile.options.multiOptions.1 = "Allowed"

roles.elements.access_other_user_profile.options.multiOptions.0 = "Not Allowed"

roles.elements.access_other_user_profile.options.separator = " "



;Add an Access to users Articles element

roles.elements.access_other_user_article.type = "radio"

roles.elements.access_other_user_article.options.class = "ui-widget-content ui-corner-all"

roles.elements.access_other_user_article.options.required = true

roles.elements.access_other_user_article.options.label = "Allow  user to access to other user's articles also "

roles.elements.access_other_user_article.options.title = "NB : Enabling means, you are allowing user of this role to view and manage other user's articles as well.  This feature might be useful for sub-admin or manager but please make sure that, when you enable it, user under this role is going to get access to all user's articles. "

roles.elements.access_other_user_article.options.info = "NB : Enabling means, you are allowing user of this role to view and manage other user's articles as well.  This feature might be useful for sub-admin or manager but please make sure that, when you enable it, user under this role is going to get access to all user's articles. "

roles.elements.access_other_user_article.options.value = "0"

roles.elements.access_other_user_article.options.multiOptions.1 = "Allowed"

roles.elements.access_other_user_article.options.multiOptions.0 = "Not Allowed"

roles.elements.access_other_user_article.options.separator = " "





;Add an Allow to change own profile role element

roles.elements.allow_change_own_profile_role.type = "radio"

roles.elements.allow_change_own_profile_role.options.class = "ui-widget-content ui-corner-all"

roles.elements.allow_change_own_profile_role.options.required = true

roles.elements.allow_change_own_profile_role.options.label = "Allow user to change own role"

roles.elements.allow_change_own_profile_role.options.title = "Allow user to change own role"

roles.elements.allow_change_own_profile_role.options.info = "Allowing means, you are permitting the user under this role to switch over or down from one role to another. Allowing this option to higher privileged user (e.g Sub-admin, super-admin or manager roles etc) has less risk then allowing lower privileged user group / role. Please be extremely cautious allowing this option to lower privileged role (e.g user, members or affiliates roles etc) because this can create a serious security hole if you allow lower privileged role to change their own role which will permit to switch over to admin, root or any other higher user group / role."

roles.elements.allow_change_own_profile_role.options.value = "0"

roles.elements.allow_change_own_profile_role.options.multiOptions.1 = "Allowed"

roles.elements.allow_change_own_profile_role.options.multiOptions.0 = "Not Allowed"

roles.elements.allow_change_own_profile_role.options.separator = " "





;Add an Allow to change other user role element

roles.elements.allow_change_user_role.type = "radio"

roles.elements.allow_change_user_role.options.class = "ui-widget-content ui-corner-all"

roles.elements.allow_change_user_role.options.required = true

roles.elements.allow_change_user_role.options.label = "Allow user to change the role of other user(s)"

roles.elements.allow_change_user_role.options.title = "Allow user to change the role of other user(s)"

roles.elements.allow_change_user_role.options.info = "Allowing means, you are permitting the user of this role to change his/her as well as other user&rsquo;s role to switch over or down from one role to another. Allowing this option to higher privileged user (e.g Sub-admin, super-admin or manager roles etc) has less risk then allowing lower privileged user group / role. Please be extremely cautious allowing this option to lower privileged role (e.g user, members or affiliates roles etc) because this can create a serious security hole if you allow lower privileged role to change their own as well as other&rsquo;s role which will permit un-restricted access to user group / role setting. We strongly recommend allowing this setting for none but admin / root user only."

roles.elements.allow_change_user_role.options.value = "0"

roles.elements.allow_change_user_role.options.multiOptions.1 = "Allowed"

roles.elements.allow_change_user_role.options.multiOptions.0 = "Not Allowed"

roles.elements.allow_change_user_role.options.separator = " "



;Add an Access to users register role element

roles.elements.allow_register_to_this_role.type = "radio"

roles.elements.allow_register_to_this_role.options.class = "ui-widget-content ui-corner-all"

roles.elements.allow_register_to_this_role.options.required = true

roles.elements.allow_register_to_this_role.options.label = "Do you want to allow visitors to register for this role?  "

roles.elements.allow_register_to_this_role.options.title = "NB : Enabling means, when a visitor clicks on <b>Register now</b> link from font-end , this role will be displayed as option where user can be applied for. Generally Administrator, Manager, sub-admin is some kinds of role which is not allowed    for public registration. You can allow    members, affiliates, agents; partners role for publish registration. Please decide would you allow user to register for this role."

roles.elements.allow_register_to_this_role.options.info = "NB : Enabling means, when a visitor clicks on <b>Register now</b> link from font-end , this role will be displayed as option where user can be applied for. Generally Administrator, Manager, sub-admin is some kinds of role which is not allowed  <img src="application/modules/Administrator/layouts/scripts/images/tools/user-delete.gif" />  for public registration. You can allow  <img src="application/modules/Administrator/layouts/scripts/images/tools/user-active.gif" />   members, affiliates, agents; partners role for publish registration. Please decide would you allow user to register for this role."

roles.elements.allow_register_to_this_role.options.value = "1"

roles.elements.allow_register_to_this_role.options.multiOptions.1 = "Yes"

roles.elements.allow_register_to_this_role.options.multiOptions.0 = "No"

roles.elements.allow_register_to_this_role.options.separator = " "



;Add an Allow user to upgrade / downgrade Package element

roles.elements.allow_change_user_packages.type = "radio"

roles.elements.allow_change_user_packages.options.class = "ui-widget-content ui-corner-all"

roles.elements.allow_change_user_packages.options.required = true

roles.elements.allow_change_user_packages.options.label = "Allow user to upgrade / downgrade Package"

roles.elements.allow_change_user_packages.options.title = "Allow user to upgrade / downgrade Package"

roles.elements.allow_change_user_packages.options.info = "Would you permit users under this role to upgrade / downgrade from their one package to other? If you allow, user can change their subscribed package (e.g free to gold / silver to diamond package plan) from their control panel with your attention.  As soon as user sets a new package, all facilities of new package will be applied for his/her account.  We strongly recommend not allowing this setting except admin / root user."

roles.elements.allow_change_user_packages.options.value = "0"

roles.elements.allow_change_user_packages.options.multiOptions.1 = "Allowed"

roles.elements.allow_change_user_packages.options.multiOptions.0 = "Not Allowed"

roles.elements.allow_change_user_packages.options.separator = " "



;Add an Allow to reset user password element

roles.elements.allow_reset_user_password.type = "radio"

roles.elements.allow_reset_user_password.options.class = "ui-widget-content ui-corner-all"

roles.elements.allow_reset_user_password.options.required = true

roles.elements.allow_reset_user_password.options.label = "Allow user to reset password without asking old password (Only for users list page)"

roles.elements.allow_reset_user_password.options.title = "Allow user to reset password without asking old password (Only for users list page)"

roles.elements.allow_reset_user_password.options.info = "It is a good practice to ask old password before applying new password as security identification.  If you allow this setting, software will NOT ask for old password before applying new password. Enabling this option will permit user to change password without providing previous credential. (This Function will work only for users list page)"

roles.elements.allow_reset_user_password.options.value = "0"

roles.elements.allow_reset_user_password.options.multiOptions.1 = "Allowed"

roles.elements.allow_reset_user_password.options.multiOptions.0 = "Not Allowed"

roles.elements.allow_reset_user_password.options.separator = " "



;Add an Allow user to login from Font end  element

roles.elements.allow_login_from_frontend.type = "radio"

roles.elements.allow_login_from_frontend.options.class = "ui-widget-content ui-corner-all"

roles.elements.allow_login_from_frontend.options.required = true

roles.elements.allow_login_from_frontend.options.label = "Allow user to login from Font end "

roles.elements.allow_login_from_frontend.options.title = "Allow user to login from Font end"

roles.elements.allow_login_from_frontend.options.info = "If you want user to login from font-end, you may enable this option. Allowing means, you are permitting user under this role to log on to his/her control panel via frontend interface. "

roles.elements.allow_login_from_frontend.options.value = "0"

roles.elements.allow_login_from_frontend.options.multiOptions.1 = "Allowed"

roles.elements.allow_login_from_frontend.options.multiOptions.0 = "Not Allowed"

roles.elements.allow_login_from_frontend.options.separator = " "



;Add an Page to redirect after successful log in element

roles.elements.redirect_to_page_after_login.type = "text"

roles.elements.redirect_to_page_after_login.options.size =40

roles.elements.redirect_to_page_after_login.options.required = false

roles.elements.redirect_to_page_after_login.options.label = "Page to redirect after successful log in (Only For admin Panel)"

roles.elements.redirect_to_page_after_login.options.title = "Page to redirect after successful log in (Only For admin Panel)"

roles.elements.redirect_to_page_after_login.options.info = "Type the URI where you want to redirect a user after successful authentication. Type the URL excluding your root path. For example http://www.yourdomain.com/Administrator/login/auth, make sure you discard &ldquo;http://www.yourdomain.com/&rdquo; and add the remaining portion of URI. This setting is handy when you would to set an especial page after login for a certain user group / role.  (Only For admin Panel)"

roles.elements.redirect_to_page_after_login.options.class = "ui-widget-content ui-corner-all"

roles.elements.redirect_to_page_after_login.options.value = "Administrator/index/index"

roles.elements.redirect_to_page_after_login.options.filters.trim.filter = "StringTrim"

roles.elements.redirect_to_page_after_login.options.filters.StripTags.filter = "StripTags"



;Add an Page to redirect after successful log out element

roles.elements.redirect_to_page_after_logout.type = "text"

roles.elements.redirect_to_page_after_logout.options.size =40

roles.elements.redirect_to_page_after_logout.options.required = false

roles.elements.redirect_to_page_after_logout.options.label = "Page to redirect after successful log out (Only For admin Panel)"

roles.elements.redirect_to_page_after_logout.options.title = "Page to redirect after successful log out (Only For admin Panel)"

roles.elements.redirect_to_page_after_logout.options.info = "Type the URI where you want to redirect a user after log out. Type the URL excluding your root path. For example http://www.yourdomain.com/Administrator/login/auth, make sure you discard &ldquo;http://www.yourdomain.com/&rdquo; and add the remaining portion of URI. This setting is handy when you would to set an especial or promotional page after logout for a certain user group / role.  (Only For admin Panel)"

roles.elements.redirect_to_page_after_logout.options.class = "ui-widget-content ui-corner-all"

roles.elements.redirect_to_page_after_logout.options.value = ""

roles.elements.redirect_to_page_after_logout.options.filters.trim.filter = "StringTrim"

roles.elements.redirect_to_page_after_logout.options.filters.StripTags.filter = "StripTags"



;Add an Allow system to send email element

roles.elements.allow_to_send_email.type = "radio"

roles.elements.allow_to_send_email.options.class = "ui-widget-content ui-corner-all"

roles.elements.allow_to_send_email.options.required = true

roles.elements.allow_to_send_email.options.label = "Allow system to send email "

roles.elements.allow_to_send_email.options.title = "Allow system to send email "

roles.elements.allow_to_send_email.options.info = "This setting is handy for spam control or managing social group. Allowing this option will send various emails such as newsletters, notification, alerts or other system email. "

roles.elements.allow_to_send_email.options.value = "1"

roles.elements.allow_to_send_email.options.multiOptions.1 = "Allowed"

roles.elements.allow_to_send_email.options.multiOptions.0 = "Not Allowed"

roles.elements.allow_to_send_email.options.separator = " "



;Add an Allow user to change the ownership of a list element

roles.elements.allow_to_change_ownership.type = "radio"

roles.elements.allow_to_change_ownership.options.class = "ui-widget-content ui-corner-all"

roles.elements.allow_to_change_ownership.options.required = true

roles.elements.allow_to_change_ownership.options.label = "Allow user to change the ownership of a list  "

roles.elements.allow_to_change_ownership.options.title = "Allow user to change the ownership of a list "

roles.elements.allow_to_change_ownership.options.info = "By default, the user who added a product / service is the owner of respective listing. The user who added a listing carries it&rsquo;s responsibilities and manage through control panel. Allowing this option will add extra privilege for the uses under this role to change the owner of existing listing. We strongly recommend not allowing this option unless the user group / role is fully trusted."

roles.elements.allow_to_change_ownership.options.value = "0"

roles.elements.allow_to_change_ownership.options.multiOptions.1 = "Allowed"

roles.elements.allow_to_change_ownership.options.multiOptions.0 = "Not Allowed"

roles.elements.allow_to_change_ownership.options.separator = " "


;Add an Allow IP Checking for Login of a list element

roles.elements.allow_ip_checking_to_login.type = "radio"

roles.elements.allow_ip_checking_to_login.options.class = "ui-widget-content ui-corner-all"

roles.elements.allow_ip_checking_to_login.options.required = true

roles.elements.allow_ip_checking_to_login.options.label = "Do you want  apply &ldquo;This Role&rdquo; under the security policy of IP Restriction  ? "

roles.elements.allow_ip_checking_to_login.options.title = "Do you want  apply &ldquo;This Role&rdquo; under the security policy of IP Restriction  ? "

roles.elements.allow_ip_checking_to_login.options.info = "The IP restriction policy is globally controlled by Global Setting => Security => Apply IP Security Rules throughout the system. If you select any rules (Not Disabled in global setting), the setting under Utility => Allow / Deny IP(s) security rules set  will come into play when a user tries to login. Selecting &lsquo;Yes&rsquo; means, you are bringing this role under the IP based security policy while selecting &lsquo;No&rsquo; will allow user&rsquo;s to access after validating login credential regardless his/her IP is blocked or not."

roles.elements.allow_ip_checking_to_login.options.value = "0"

roles.elements.allow_ip_checking_to_login.options.multiOptions.1 = "Yes"

roles.elements.allow_ip_checking_to_login.options.multiOptions.0 = "No"

roles.elements.allow_ip_checking_to_login.options.separator = " "



;Group Settings

roles.displayGroups.exclusions.0.name = "general_information"

roles.displayGroups.exclusions.0.options.order = "1"

roles.displayGroups.exclusions.0.options.legend = "General Information"

roles.displayGroups.exclusions.0.elements.1 = role_name

roles.displayGroups.exclusions.0.elements.2 = role_title

roles.displayGroups.exclusions.0.elements.3 = role_desc

roles.displayGroups.exclusions.0.elements.4 = role_lock

roles.displayGroups.exclusions.0.elements.5 = form_id





roles.displayGroups.exclusions.1.name = "setting_info"

roles.displayGroups.exclusions.1.options.order = "2"

roles.displayGroups.exclusions.1.options.legend = "Role Settings"

roles.displayGroups.exclusions.1.elements.1 = redirect_to_page_after_login

roles.displayGroups.exclusions.1.elements.2 = redirect_to_page_after_logout

roles.displayGroups.exclusions.1.elements.3 = auto_approve

roles.displayGroups.exclusions.1.elements.4 = auto_publish_article

roles.displayGroups.exclusions.1.elements.5 = access_file_image_manager

roles.displayGroups.exclusions.1.elements.6 = access_other_user_profile

roles.displayGroups.exclusions.1.elements.7 = access_other_user_article

roles.displayGroups.exclusions.1.elements.8 = allow_change_own_profile_role

roles.displayGroups.exclusions.1.elements.9 = allow_change_user_role

roles.displayGroups.exclusions.1.elements.10 = allow_change_user_packages

roles.displayGroups.exclusions.1.elements.11 = allow_reset_user_password

roles.displayGroups.exclusions.1.elements.12 = allow_login_from_frontend

roles.displayGroups.exclusions.1.elements.13 = allow_to_send_email

roles.displayGroups.exclusions.1.elements.14 = allow_to_change_ownership

roles.displayGroups.exclusions.1.elements.15 = allow_register_to_this_role

roles.displayGroups.exclusions.1.elements.16 = allow_ip_checking_to_login